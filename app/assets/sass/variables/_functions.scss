@use "sass:math";

$base-font-size: 16;

@function px($value) {
	$result: 0;
	$result: calc($value/$base-font-size) + rem;
	@return $result;
}

@mixin clearfix() {
	&::after {
		display: block;
		content: "";
		clear  : both;
	}
}

@mixin scrollbars($size, $foreground-color, $background-color: mix($foreground-color, white, 50%)) {

	// For Google Chrome
	&::-webkit-scrollbar {
		width : $size;
		height: $size;
	}

	&::-webkit-scrollbar-thumb {
		background: $foreground-color;
	}

	&::-webkit-scrollbar-track {
		background: $background-color;
	}

	// For Internet Explorer
	& {
		scrollbar-face-color : $foreground-color;
		scrollbar-track-color: $background-color;
	}

	& {
		scrollbar-color: $foreground-color $background-color;
		scrollbar-width: thin;
	}
}

@mixin font($size, $lineheight, $weight) {
	font-size  : px($size);
	line-height: $lineheight;
	font-weight: $weight;
}

@mixin topCenter() {
	top      : 50%;
	transform: translateY(-50%);
	position : absolute;
}

@mixin leftCenter() {
	left     : 50%;
	position : absolute;
	transform: translateX(-50%);
}

@mixin verticalCenter() {
	left     : 50%;
	top      : 50%;
	transform: translate(-50%, -50%);
	position : absolute;
}

$grid-breakpoints: (xs: 0,
	sm: 640px,
	md: 768px,
	lg: 1024px,
	xl: 1280px);


@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
	$n: index($breakpoint-names, $name);

	@if not $n {
		@error "breakpoint `#{$name}` not found in `#{$breakpoints}`";
	}

	@return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}

@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
	$min: map-get($breakpoints, $name);
	@return if($min !=0, $min, null);
}

@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
	$max: map-get($breakpoints, $name);
	@return if($max and $max > 0, $max - .02, null);
}

@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
	@return if(breakpoint-min($name, $breakpoints)==null, "", "-#{$name}");
}

@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
	$min: breakpoint-min($name, $breakpoints);

	@if $min {
		@media (min-width: $min) {
			@content;
		}
	}

	@else {
		@content;
	}
}

@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
	$max: breakpoint-max($name, $breakpoints);

	@if $max {
		@media (max-width: $max) {
			@content;
		}
	}

	@else {
		@content;
	}
}

@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {
	$min: breakpoint-min($lower, $breakpoints);
	$max: breakpoint-max($upper, $breakpoints);

	@if $min !=null and $max !=null {
		@media (min-width: $min) and (max-width: $max) {
			@content;
		}
	}

	@else if $max==null {
		@include media-breakpoint-up($lower, $breakpoints) {
			@content;
		}
	}

	@else if $min==null {
		@include media-breakpoint-down($upper, $breakpoints) {
			@content;
		}
	}
}

@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {
	$min : breakpoint-min($name, $breakpoints);
	$next: breakpoint-next($name, $breakpoints);
	$max : breakpoint-max($next);

	@if $min !=null and $max !=null {
		@media (min-width: $min) and (max-width: $max) {
			@content;
		}
	}

	@else if $max==null {
		@include media-breakpoint-up($name, $breakpoints) {
			@content;
		}
	}

	@else if $min==null {
		@include media-breakpoint-down($next, $breakpoints) {
			@content;
		}
	}
}